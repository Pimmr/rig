version: 2
jobs:
  lint-and-test:
    docker:
      - image: circleci/golang:1.14.1
    working_directory: /home/circleci/rig
    steps:
      - checkout

      - run:
          name: go version
          command: |
            go version

      - restore_cache:
          keys:
            - go-pkg-cache-v1-{{ checksum "go.mod" }}

      - run:
          name: Installing tools
          command: |
            go install -v github.com/jstemmer/go-junit-report
            go install -v github.com/mattn/goveralls

      - run:
          name: Building examples
          command: |
            TAG=${CIRCLE_TAG:-dev}
            CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a ./examples/...

      - save_cache:
          key: go-pkg-cache-v1-{{ checksum "go.mod" }}
          paths:
            - /go/pkg/dep
            - /go/pkg/mod

      - run:
          name: Linters
          command: |
            curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sudo sh -s -- -b $(go env GOPATH)/bin v1.20.0
            golangci-lint run

      - run:
          name: Tests
          command: |
            mkdir -p /home/circleci/test-results/go-test
            go test -test.v -test.bench=. -covermode=count -coverprofile=coverage.out ./...
            go test -test.v ./... | go-junit-report > /home/circleci/test-results/go-test/report.xml
            go test -test.race ./...
            goveralls -coverprofile=coverage.out -service=circle-ci -repotoken ${COVERALLS_TOKEN}

      - store_test_results:
          path: /home/circleci/test-results


workflows:
  version: 2
  build-test:
    jobs:
      - lint-and-test:
          filters:
            tags:
              only: /.*/
